<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Odyssey.Controls">

    <LinearGradientBrush x:Key="mouseOverBtnBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#EEEEEE" Offset="0"/>
        <GradientStop Color="#DDDDDD" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="mousePressedBtnBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#AAAAAA" Offset="0"/>
        <GradientStop Color="#999999" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="GradientBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#dedede" Offset="0"/>
        <GradientStop Color="#d0d0d0" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="borderBrush" Color="#c0dddddd"/>
    <SolidColorBrush x:Key="borderShadowBrush" Color="#60000000"/>
    <BooleanToVisibilityConverter x:Key="boolToVisible"/>
    <ImageSourceConverter x:Key="imgConverter"/>
    <SolidColorBrush x:Key="searchFace" Color="#fafafa"/>

    <Geometry x:Key="RightArrow">M0,0 L5,3.5 0,7 z</Geometry>
    <Geometry x:Key="DownArrow">M0,3 L7,3 3.5,7 z</Geometry>
    <Geometry x:Key="OverflowArrow">F1 M7,0 L4,3 7,6 M3,0 L0,3 3,6</Geometry>

    <!--Control colors.-->
    <Color x:Key="WindowColor">#FFE8EDF9</Color>
    <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
    <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
    <Color x:Key="DisabledForegroundColor">#FF888888</Color>

    <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
    <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

    <Color x:Key="ControlLightColor">White</Color>
    <Color x:Key="ControlMediumColor">#FF7381F9</Color>
    <Color x:Key="ControlDarkColor">#FF211AA9</Color>

    <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
    <Color x:Key="ControlPressedColor">#FF211AA9</Color>


    <Color x:Key="GlyphColor">#FF444444</Color>
    <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

    <!--Border colors-->
    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
    <Color x:Key="BorderMediumColor">#EEEEEEFF</Color>
    <Color x:Key="BorderDarkColor">#FF444444</Color>

    <Color x:Key="PressedBorderLightColor">#FF888888</Color>
    <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
    <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

    <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

    <!--Control-specific resources.-->
    <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
    <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
    <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

    <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

    <SolidColorBrush x:Key="MenuPopupBrush" Color="White"/>

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#000000FF"
                    Offset="0" />
                <GradientStop Color="#600000FF"
                    Offset="0.4" />
                <GradientStop Color="#600000FF"
                    Offset="0.6" />
                <GradientStop Color="#000000FF"
                    Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="{x:Type Menu}"
       TargetType="{x:Type Menu}">
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border BorderThickness="1">
                        <StackPanel ClipToBounds="True"
                      Orientation="Horizontal"
                      IsItemsHost="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
       TargetType="{x:Type Separator}">
        <Setter Property="Height"
          Value="1" />
        <Setter Property="Margin"
          Value="0,4,0,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderThickness="1">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="#eeeeee" />
                        </Border.BorderBrush>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ScrollViewer for a MenuItem-->
    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />

    <Style x:Key="MenuScrollViewer"
       TargetType="{x:Type ScrollViewer}"
       BasedOn="{x:Null}">
        <Setter Property="HorizontalScrollBarVisibility"
          Value="Hidden" />
        <Setter Property="VerticalScrollBarVisibility"
          Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1"
                  Grid.Column="0">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}" />
                        </Border>
                        <RepeatButton Background="Transparent" BorderBrush="Transparent"
                        Grid.Row="0"
                        Grid.Column="0"
                        Command="{x:Static ScrollBar.LineUpCommand}"
                        CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                        Focusable="False">
                            <!--menu scroll button-->
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                            Converter="{StaticResource MenuScrollingVisibilityConverter}"
                            ConverterParameter="0">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ComputedVerticalScrollBarVisibility" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="VerticalOffset" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ExtentHeight" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ViewportHeight" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                  Data="M 0 3.5 L 3.5 0 L 7 3.5 Z" />
                            <!--up arrow-->
                        </RepeatButton>
                        <RepeatButton Background="Transparent" BorderBrush="Transparent"
                        Grid.Row="2"
                        Grid.Column="0"
                        Command="{x:Static ScrollBar.LineDownCommand}"
                        CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                        Focusable="False">
                            <!--menuscrollbutton-->
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                            Converter="{StaticResource MenuScrollingVisibilityConverter}"
                            ConverterParameter="100">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ComputedVerticalScrollBarVisibility" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="VerticalOffset" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ExtentHeight" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ViewportHeight" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                  Data="M 0 0 L 7 0 L 3.5 3.5 Z" />
                            <!--down arrow-->
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ContextMenuStyle"
       TargetType="{x:Type ContextMenu}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border">
                        <Grid x:Name="placer">
                            <Popup x:Name="Popup"
                       Placement="Bottom"
                       HorizontalOffset="-4"
             IsOpen="{TemplateBinding IsOpen}"
             AllowsTransparency="True"
             Focusable="False"
             PopupAnimation="Fade">
                                <Grid>
                                    <Border x:Name="SubmenuBorder"
                SnapsToDevicePixels="True"
                BorderThickness="0 4 0 4"
                Background="White" BorderBrush="White" CornerRadius="5" Margin="2, 0, 20, 20">
                                        <Border.Effect>
                                            <DropShadowEffect ShadowDepth="2" BlurRadius="20" Opacity="0.13"/>
                                        </Border.Effect>
                                        <Grid>
                                            <ScrollViewer CanContentScroll="True"
                        Style="{StaticResource MenuScrollViewer}">
                                                <StackPanel IsItemsHost="True"
                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                                            </ScrollViewer>
                                        </Grid>
                                    </Border>
                                </Grid>

                            </Popup>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- TopLevelHeader -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
                 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border">
            <Grid x:Name="placer">
                <ContentPresenter Margin="6,3,6,3"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                <Popup x:Name="Popup"
                       Placement="Bottom"
                       HorizontalOffset="-4"
             IsOpen="{TemplateBinding IsSubmenuOpen}"
             AllowsTransparency="True"
             Focusable="False"
             PopupAnimation="Fade">
                    <Grid>
                        <Border x:Name="SubmenuBorder"
                SnapsToDevicePixels="True"
                BorderThickness="0 4 0 4"
                Background="White" BorderBrush="White" CornerRadius="5" Margin="2, 0, 20, 20">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="2" BlurRadius="20" Opacity="0.13"/>
                            </Border.Effect>
                            <Grid>
                                <ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}">
                                    <StackPanel IsItemsHost="True"
                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </ScrollViewer>
                            </Grid>
                        </Border>
                    </Grid>

                </Popup>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation"
             Value="true">
                <Setter TargetName="Popup"
              Property="PopupAnimation"
              Value="None" />
            </Trigger>
            <Trigger Property="IsHighlighted"
             Value="true">
                <Setter TargetName="Border"
              Property="BorderBrush"
              Value="Transparent" />
                <Setter Property="Background"
              TargetName="Border">
                    <Setter.Value>
                        <SolidColorBrush Color="#008aec"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="#ffffff" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger SourceName="Popup"
             Property="AllowsTransparency"
             Value="True">
                <Setter TargetName="SubmenuBorder"
              Property="CornerRadius"
              Value="5" />
                <Setter TargetName="SubmenuBorder"
              Property="Padding"
              Value="0,0,0,0" />
            </Trigger>
            <Trigger Property="IsEnabled"
             Value="False">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- TopLevelItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}"
                 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border">
            <Grid>
                <ContentPresenter Margin="6,2,6,3"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted"
             Value="true">
                <Setter Property="Background"
              TargetName="Border">
                    <Setter.Value>
                        <SolidColorBrush Color="#008aec"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="#ffffff" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled"
             Value="False">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
                 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border"
          BorderThickness="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                        Margin="6,0,6,0"
                        VerticalAlignment="Center"
                        ContentSource="Icon" />
                <Border x:Name="Check"
              Width="13"
              Height="13"
              Visibility="Collapsed"
              Margin="6,0,6,0"
              BorderThickness="1">
                    <Border.BorderBrush>
                        <LinearGradientBrush StartPoint="0,0"
                               EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource BorderLightColor}"
                              Offset="0.0" />
                                    <GradientStop Color="{DynamicResource BorderDarkColor}"
                              Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>

                    </Border.BorderBrush>
                    <Border.Background>
                        <SolidColorBrush Color="White"/>
                    </Border.Background>
                    <Path x:Name="CheckMark"
              Width="7"
              Height="7"
              Visibility="Hidden"
              SnapsToDevicePixels="False"
              StrokeThickness="2"
              Data="M 0 0 L 7 7 M 0 7 L 7 0">
                        <Path.Stroke>
                            <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                        </Path.Stroke>
                    </Path>
                </Border>
                <ContentPresenter x:Name="HeaderHost"
                        Grid.Column="1"
                        ContentSource="Header"
                        RecognizesAccessKey="True" Margin="0, 1,0,0"/>
                <TextBlock x:Name="InputGestureText"
                 Grid.Column="2"
                 Text="{TemplateBinding InputGestureText}"
                  Margin="16,2,2,2" FontFamily="Consolas"
                 DockPanel.Dock="Right" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.Command"
             Value="{x:Null}" />
            <Trigger Property="Icon"
             Value="{x:Null}">
                <Setter TargetName="Icon"
              Property="Visibility"
              Value="Hidden" />
            </Trigger>
            <Trigger Property="IsChecked"
             Value="true">
                <Setter TargetName="CheckMark"
              Property="Visibility"
              Value="Visible" />
            </Trigger>
            <Trigger Property="IsCheckable"
             Value="true">
                <Setter TargetName="Check"
              Property="Visibility"
              Value="Visible" />
                <Setter TargetName="Icon"
              Property="Visibility"
              Value="Hidden" />
            </Trigger>
            <Trigger Property="IsHighlighted"
             Value="true">
                <Setter Property="Background"
              TargetName="Border">
                    <Setter.Value>
                        <SolidColorBrush Color="#008aec"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="#ffffff" />
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush"
              TargetName="Border">
                    <Setter.Value>
                        <SolidColorBrush Color="#eeeeee"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="false">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="#000000" />
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="IsEnabled"
             Value="false">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
                 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border"
          BorderThickness="0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                        Margin="6,0,6,0"
                        VerticalAlignment="Center"
                        ContentSource="Icon" />
                <ContentPresenter x:Name="HeaderHost"
                        Grid.Column="1"
                        ContentSource="Header"
                        RecognizesAccessKey="True" Margin="13, 1, 0, 0"/>
                <TextBlock x:Name="InputGestureText"
                 Grid.Column="2"
                 Text="{TemplateBinding InputGestureText}"
                 Margin="16,0,2,2" FontFamily="Consolas"
                 DockPanel.Dock="Right" />
                <Path Grid.Column="3"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Data="M 0 0 L 0 7 L 4 3.5 Z">
                    <Path.Fill>
                        <SolidColorBrush Color="Gray" />
                    </Path.Fill>
                </Path>
                <Popup x:Name="Popup"
             Placement="Right"
             HorizontalOffset="-4"
             IsOpen="{TemplateBinding IsSubmenuOpen}"
             AllowsTransparency="True"
             Focusable="False"
             PopupAnimation="Fade">
                    <Grid>
                        <Border x:Name="SubmenuBorder"
                SnapsToDevicePixels="True"
                Background="{DynamicResource MenuPopupBrush}"
                BorderThickness="0" CornerRadius="5" Margin="6, 0, 20, 20">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                            </Border.BorderBrush>
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="2" BlurRadius="20" Opacity="0.13"/>
                            </Border.Effect>
                            <ScrollViewer CanContentScroll="True"
                        Style="{StaticResource MenuScrollViewer}">
                                <StackPanel IsItemsHost="True"
                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon"
             Value="{x:Null}">
                <Setter TargetName="Icon"
              Property="Visibility"
              Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted"
             Value="true">
                <Setter Property="Background"
              TargetName="Border">
                    <Setter.Value>
                        <SolidColorBrush Color="#008aec"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="#ffffff" />
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush"
              TargetName="Border">
                    <Setter.Value>
                        <SolidColorBrush Color="#eeeeee"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="false">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="#000000" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger SourceName="Popup"
             Property="AllowsTransparency"
             Value="True">
                <Setter TargetName="SubmenuBorder"
              Property="CornerRadius"
              Value="4" />
                <Setter TargetName="SubmenuBorder"
              Property="Padding"
              Value="0,3,0,3" />
            </Trigger>
            <Trigger Property="IsEnabled"
             Value="false">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- MenuItem Style -->
    <Style x:Name="menuItemStyle" x:Key="{x:Type MenuItem}"
       TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Style.Triggers>
            <Trigger Property="Role"
             Value="TopLevelHeader">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                <Setter Property="Grid.IsSharedSizeScope"
              Value="true" />
            </Trigger>
            <Trigger Property="Role"
             Value="TopLevelItem">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role"
             Value="SubmenuHeader">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role"
             Value="SubmenuItem">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="DropDownButtonTemplate">
        <local:AeroChrome  SnapsToDevicePixels="True" Focusable="False" x:Name="chrome"
            BorderBrush="{StaticResource borderBrush}"
            BorderThickness="0"
            RenderMouseOver="{TemplateBinding IsMouseOver}" 
            RenderPressed="{TemplateBinding IsPressed}" >
            <local:AeroChrome.Content>
                <Path x:Name="arrow" Data="{StaticResource DownArrow}" SnapsToDevicePixels="True" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="Black" Focusable="False"/>
            </local:AeroChrome.Content>
        </local:AeroChrome>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="chrome" Property="RenderMouseOver" Value="True"/>
                <Setter TargetName="arrow" Property="Fill" Value="White"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--ButtonTemplate
    <ControlTemplate TargetType="{x:Type Button}" x:Key="ButtonTemplate">
        <Border Margin="-1,-1,0,-1" BorderBrush="{StaticResource borderBrush}" BorderThickness="1" Background="Transparent" SnapsToDevicePixels="True" Focusable="False">
            <local:AeroChrome  SnapsToDevicePixels="True" x:Name="chrome" Focusable="False"
            BorderBrush="{StaticResource borderBrush}"
            BorderThickness="1"
             Margin="-1"
            RenderMouseOver="{TemplateBinding IsMouseOver}" 
            RenderPressed="{TemplateBinding IsPressed}" 
            Content="{TemplateBinding Content}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="chrome" Property="RenderMouseOver" Value="True"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>-->
    <Style TargetType="Button">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="{StaticResource buttonFace}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border" BorderThickness="0.8" CornerRadius="4" BorderBrush="#e8e8e8" Background="{StaticResource buttonFace}" TextBlock.Foreground="Black">
                        <Grid Margin="0 0 0 0">
                            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" >
                            </ContentPresenter>
                        </Grid>
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="3" ShadowDepth="0" Opacity="0.2"/>
                        </Border.Effect>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation From="3" To="8" Duration="0:0:0.1" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.BlurRadius)"/>
                                    <DoubleAnimation From="0.2" To="0.35" Duration="0:0:0.1" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.Opacity)"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation From="8" To="3" Duration="0:0:0.1" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.BlurRadius)"/>
                                    <DoubleAnimation From="0.35" To="0.2" Duration="0:0:0.1" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.Opacity)"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="Gray"></Setter>
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="DarkGray"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--BreadcrumbItem-->
    <Style TargetType="{x:Type local:BreadcrumbItem}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="BorderBrush" Value="{StaticResource borderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:BreadcrumbItem}">
                    <Border Background="Transparent" Focusable="False"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0" Margin="0 0 0 0">
                        <DockPanel>
                            <local:BreadcrumbButton x:Name="PART_Header" 
                                                    DataContext="{Binding}"
                                                    IsImageVisible="{TemplateBinding IsRoot}"
                                                    IsButtonVisible="{TemplateBinding IsButtonVisible}"
                                                    ItemTemplate="{TemplateBinding OverflowItemTemplate}"
                                                    ItemTemplateSelector="{TemplateBinding OverflowItemTemplateSelector}"
                                                    IsDropDownPressed="{Binding IsDropDownPressed, RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                                                    SelectedItem="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                                                    Image ="{TemplateBinding Image}"
                                                    Header="{TemplateBinding Header}" ItemsSource="{Binding Items, RelativeSource={RelativeSource TemplatedParent}}">
                            </local:BreadcrumbButton>
                            <ContentControl x:Name="PART_Selected"  Focusable="False" Content="{TemplateBinding SelectedBreadcrumb}" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsRoot" Value="True">
                            <Setter Property="EnableVisualButtonStyle" Value="False" TargetName="PART_Header"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="progressBarTemplate" TargetType="ProgressBar" 
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                     xmlns:s="clr-namespace:System;assembly=mscorlib">
        <Grid Name="Background" SnapsToDevicePixels="True">
            <Rectangle Name="PART_Track" Margin="1,1,1,1" />
            <Decorator Name="PART_Indicator" Margin="1,1,1,1" HorizontalAlignment="Left">
                <Grid Name="Foreground">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MaxWidth="15" />
                        <ColumnDefinition Width="0.1*" />
                        <ColumnDefinition MaxWidth="15" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Rectangle Fill="{TemplateBinding TextElement.Foreground}" Name="Indicator" Grid.ColumnSpan="3" Grid.RowSpan="2" />
                    <Rectangle Fill="{TemplateBinding TextElement.Foreground}" Name="Animation" OpacityMask="{x:Null}" Grid.ColumnSpan="3" Grid.RowSpan="2" />
                    <Rectangle Name="LeftDark" Margin="1,1,0,1" Grid.RowSpan="2">
                        <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="#0C000000" Offset="0" />
                                    <GradientStop Color="#20000000" Offset="0.3" />
                                    <GradientStop Color="#00000000" Offset="1" />
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle RadiusX="1" RadiusY="1" Name="RightDark" Margin="0,1,1,1" Grid.Column="2" Grid.RowSpan="2">
                        <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="#00000000" Offset="0" />
                                    <GradientStop Color="#20000000" Offset="0.7" />
                                    <GradientStop Color="#0C000000" Offset="1" />
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle Name="LeftLight" Grid.Column="0" Grid.Row="2">
                        <Rectangle.Fill>
                            <RadialGradientBrush RadiusX="1" RadiusY="1" RelativeTransform="1,0,0,1,0.5,0.5">
                                <RadialGradientBrush.GradientStops>
                                    <GradientStop Color="#60FFFFC4" Offset="0" />
                                    <GradientStop Color="#00FFFFC4" Offset="1" />
                                </RadialGradientBrush.GradientStops>
                            </RadialGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle Name="CenterLight" Grid.Column="1" Grid.Row="2">
                        <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="#60FFFFC4" Offset="0" />
                                    <GradientStop Color="#00FFFFC4" Offset="1" />
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle Name="RightLight" Grid.Column="2" Grid.Row="2">
                        <Rectangle.Fill>
                            <RadialGradientBrush RadiusX="1" RadiusY="1" RelativeTransform="1,0,0,1,-0.5,0.5">
                                <RadialGradientBrush.GradientStops>
                                    <GradientStop Color="#60FFFFC4" Offset="0" />
                                    <GradientStop Color="#00FFFFC4" Offset="1" />
                                </RadialGradientBrush.GradientStops>
                            </RadialGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Border Name="Highlight1" Grid.ColumnSpan="3" Grid.RowSpan="2">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="#90FFFFFF" Offset="0.5385" />
                                    <GradientStop Color="#00FFFFFF" Offset="0.5385" />
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                    <Border Name="Highlight2" Grid.ColumnSpan="3" Grid.RowSpan="2">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="#80FFFFFF" Offset="0.05" />
                                    <GradientStop Color="#00FFFFFF" Offset="0.25" />
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Grid>
            </Decorator>
            <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" />
        </Grid>
    </ControlTemplate>


    <!--BreadcrumbBar-->
    <Style TargetType="{x:Type local:BreadcrumbBar}">
        <Setter Property="MinHeight" Value="23"/>
        <Setter Property="Background" Value="{StaticResource searchFace}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:BreadcrumbBar}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Template" Value="{StaticResource ButtonTemplate}"/>
                            <Setter Property="MinWidth" Value="21"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                            <Setter Property="BorderBrush" Value="Black"/>
                            <Setter Property="Focusable" Value="{Binding Focusable, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:BreadcrumbBar}}}"/>
                        </Style>
                        <Style TargetType="{x:Type local:BreadcrumbButton}">
                            <Setter Property="Focusable" Value="{Binding Focusable, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:BreadcrumbBar}}}"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Border Background="{TemplateBinding Background}" SnapsToDevicePixels="True"
                            BorderBrush="#ffffff"
                            Focusable="False" CornerRadius="4"
                            BorderThickness="0.1">
                        <Border BorderBrush="#ffffff" BorderThickness="1" Focusable="False" SnapsToDevicePixels="True">
                            <Grid Margin="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ProgressBar x:Name="progress" Grid.Column="0" Grid.ColumnSpan="4" 
                                             Maximum="{Binding ProgressMaximum,RelativeSource={RelativeSource TemplatedParent}}" 
                                             Minimum="{Binding ProgressMinimum,RelativeSource={RelativeSource TemplatedParent}}" 
                                             Value="{Binding ProgressValue,RelativeSource={RelativeSource TemplatedParent}}" 
                                             Background="Transparent"
                                             BorderThickness="0"
                                             Template="{StaticResource progressBarTemplate}"/>
                                <local:BreadcrumbButton  ItemsSource="{TemplateBinding CollapsedTraces}"  Grid.Column="0"
                                                         x:Name="PART_Root"
                                                         MinWidth="0"
                                                         EnableVisualButtonStyle="False"
                                                         Mode="{TemplateBinding OverflowMode}"
                                                        SelectedItem="{Binding SelectedItem,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                                                        ItemTemplate="{TemplateBinding OverflowItemTemplate}"
                                                         IsImageVisible="True"
                                                         Image="{Binding SelectedBreadcrumb.Image, RelativeSource={RelativeSource TemplatedParent}}"
                                                        ItemTemplateSelector="{TemplateBinding OverflowItemTemplateSelector}"
                                                         Header=""
                                                        IsDropDownPressed="{Binding IsOverflowPressed,RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" >
                                </local:BreadcrumbButton>
                                <ContentPresenter x:Name="container" Grid.Column="1" Content="{Binding RootItem,RelativeSource={RelativeSource TemplatedParent}}"/>
                                <ToggleButton x:Name="dropDown" Grid.Column="2" 
                                              Focusable="False"
                                              Width="16"
                                              Visibility="Collapsed"
                                              FocusVisualStyle="{x:Null}"
                                              Template="{StaticResource DropDownButtonTemplate}" ClickMode="Press"
                                              IsChecked="{Binding IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                                              Margin="-1"
                                              BorderThickness="1"  
                                              BorderBrush="{StaticResource borderBrush}" />
                                <ComboBox x:Name="PART_ComboBox"                                             
                                          Visibility="Hidden"
                                          Margin="0,0,0,0"
                                          IsEditable="True"
                                          Focusable="True"
                                          ItemTemplate="{TemplateBinding DropDownItemTemplate}"
                                          ItemTemplateSelector="{TemplateBinding DropDownItemTemplateSelector}"
                                          ItemsSource="{Binding DropDownItems,RelativeSource={RelativeSource TemplatedParent}}"
                                          BorderThickness="0"
                                          Grid.Column="0"
                                          SelectedIndex="{Binding SelectedDropDownIndex,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                                          Grid.ColumnSpan="3"/>
                                <ItemsControl  x:Name="buttons"  Grid.Column="3" Margin="0" ItemsSource="{Binding Buttons,RelativeSource={RelativeSource TemplatedParent} }"  Focusable="False"  >
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal" IsItemsHost="True"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Visibility" Value="Visible" SourceName="PART_ComboBox">
                            <!--hide the breadcrumb container and root button  if the combobox is visible, otherwise a breadcrumb button could get the focus on mouseover: -->
                            <Setter Property="Visibility" Value="Hidden" TargetName="container"/>
                            <Setter Property="Visibility" Value="Hidden" TargetName="PART_Root"/>
                        </Trigger>
                        <Trigger Property="IsRootSelected" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Root"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.3" To="White" Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.3" From="White" Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="HasDropDownItems" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="dropDown"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--BreadcrumbButton-->
    <Style TargetType="{x:Type local:BreadcrumbButton}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="{StaticResource mouseOverBtnBrush}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:BreadcrumbButton}">
                    <Border CornerRadius="3" BorderThickness="0.5" BorderBrush="Transparent">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <local:AeroChrome Grid.Column="0"
                                          Visibility="Visible"
                                          x:Name="button"
                                          Focusable="False"
                                          Margin="-1.5"                                         
                                          BorderThickness="0" 
                                          RenderPressed="{TemplateBinding IsPressed}"
                                          RenderMouseOver="{TemplateBinding IsMouseOver}">
                                <local:AeroChrome.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <Border CornerRadius="4">
                                            <Grid>
                                                <Image x:Name="image"  Source="{Binding Image, RelativeSource={RelativeSource TemplatedParent}}" Width="16" Height="16" Stretch="Fill"/>
                                                <ContentPresenter x:Name="contentPres" TextElement.FontFamily="PingFang SC, Consolas" TextElement.FontWeight="Bold" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" Margin="2,-1,2,0"/>
                                            </Grid>
                                        </Border>
                                    </StackPanel>
                                </local:AeroChrome.Content>
                            </local:AeroChrome>

                            <!--Content="{TemplateBinding Header}"/>-->
                            <local:AeroChrome Grid.Column="1" x:Name="PART_DropDown"
                                          Focusable="False"
                                          MinWidth="16"
                                          Margin="-1.5"
                                          BorderThickness="0"
                                           RenderPressed="{TemplateBinding IsDropDownPressed}"
                                          RenderMouseOver="{TemplateBinding IsMouseOver}"
                                          ContentTemplate="{TemplateBinding DropDownContentTemplate}">
                                <local:AeroChrome.Content>
                                    <Path x:Name="dropDownPath" Fill="Black" Data="{StaticResource RightArrow}" SnapsToDevicePixels="True"  HorizontalAlignment="Center"/>
                                </local:AeroChrome.Content>
                                <local:AeroChrome.ContextMenu>
                                    <ContextMenu x:Name="PART_Menu"                                                
                                                  IsTextSearchEnabled="True"
                                                  HorizontalOffset="-5"
                                                  VerticalOffset="10"
                                                  Style="{StaticResource ContextMenuStyle}"
                                                  IsOpen="{Binding IsDropDownPressed, RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                                             />
                                </local:AeroChrome.ContextMenu>
                            </local:AeroChrome>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsImageVisible" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="image"/>
                        </Trigger>
                        <Trigger Property="Image" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="image"/>
                        </Trigger>
                        <Trigger Property="EnableVisualButtonStyle" Value="False">
                            <Setter TargetName="button" Property="MouseOverBackground" Value="Transparent"/>
                            <Setter TargetName="button" Property="MousePressedBackground" Value="Transparent"/>
                            <Setter TargetName="button" Property="BorderBrush" Value="Transparent"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Header" Value="{x:Null}"/>
                                <Condition Property="IsImageVisible" Value="False"/>
                                <Condition Property="Image" Value="{x:Null}"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="button"/>
                        </MultiTrigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_DropDown"/>
                        </Trigger>
                        <Trigger Property="Mode" Value="Overflow">
                            <Setter Property="Data" Value="{StaticResource OverflowArrow}" TargetName="dropDownPath"/>
                            <Setter Property="Fill" Value="Transparent" TargetName="dropDownPath"/>
                            <Setter Property="Stroke" Value="Black" TargetName="dropDownPath"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="RenderPressed" Value="True" TargetName="PART_DropDown"/>
                            <Setter Property="Fill" Value="White" TargetName="dropDownPath"/>
                            <Setter TargetName="contentPres" Property="TextElement.Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="RenderMouseOver" Value="True" TargetName="PART_DropDown"/>
                            <Setter Property="RenderMouseOver" Value="True" TargetName="button"/>
                        </Trigger>
                        <Trigger Property="IsDropDownVisible" Value="False">
                            <Setter TargetName="PART_DropDown" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" SourceName="PART_DropDown"/>
                                <Condition Property="EnableVisualButtonStyle" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="MouseOverBackground" Value="{StaticResource GradientBorderBrush}" TargetName="button"/>
                        </MultiTrigger>
                        <Trigger Property="IsButtonVisible" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="button"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsDropDownPressed" Value="True"/>
                                <Condition Property="Mode" Value="Breadcrumb"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Data" Value="{StaticResource DownArrow}" TargetName="dropDownPath"/>
                            <Setter Property="RenderPressed" Value="True" TargetName="button"/>
                            <Setter Property="Fill" Value="White" TargetName="dropDownPath"/>
                            <Setter TargetName="contentPres" Property="TextElement.Foreground" Value="White"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:AeroChrome}">
        <Setter Property="MouseOverBackground" Value="{StaticResource mouseOverBtnBrush}"/>
        <Setter Property="MousePressedBackground" Value="{StaticResource mousePressedBtnBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource borderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:AeroChrome}">
                    <Grid Margin="{TemplateBinding Padding}">
                        <Border x:Name="mouseOverBtn" 
                                    Opacity="0" CornerRadius="4"
                                    Background="{TemplateBinding MouseOverBackground}"
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    SnapsToDevicePixels="True">
                            <Border x:Name="innerButton" SnapsToDevicePixels="True"
                                        BorderThickness="0"
                                        BorderBrush="White"/>
                        </Border>
                        <Border x:Name="mouseDownBtn" 
                                    Opacity="0" CornerRadius="4"
                                    Background="{TemplateBinding MousePressedBackground}"
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    SnapsToDevicePixels="True">
                            <Border x:Name="innerButton2" SnapsToDevicePixels="False"
                                        BorderThickness="0"
                                        BorderBrush="{StaticResource borderShadowBrush}"/>
                        </Border>
                        <ContentPresenter Content="{TemplateBinding Content}" 
                                          x:Name="content"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          Margin="4,2,4,2"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="RenderMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard >
                                        <DoubleAnimation Storyboard.TargetName="mouseOverBtn" Storyboard.TargetProperty="Opacity" Duration="0:0:0.15" To="1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard >
                                        <DoubleAnimation Storyboard.TargetName="mouseOverBtn" Storyboard.TargetProperty="Opacity" Duration="0:0:0.15" To="0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="content" Property="TextElement.Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="RenderPressed" Value="True">
                            <Setter Property="Opacity" TargetName="mouseDownBtn" Value="1"/>
                            <Setter TargetName="content" Property="TextElement.Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
